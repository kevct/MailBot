import { Method } from 'axios';
import { AfterShip } from '../index';
interface RequestConfig {
    method: Method;
    url: string;
}
/**
 * API request interface
 */
export interface ApiRequest {
    /**
     * Make the request to AfterShip API
     * @param config the config of request (f.e. url, method)
     * @param data data
     */
    makeRequest<T, R>({ url, method }: RequestConfig, data?: T): Promise<R>;
}
/**
 * The implementation of API request
 */
export declare class ApiRequestImplementation implements ApiRequest {
    private readonly app;
    constructor(app: AfterShip);
    /**
     * Make a request call to AfterShip API
     * @param config the config of request (f.e. url, method)
     * @param data data
     */
    makeRequest<T, R>({ url, method }: RequestConfig, data?: T): Promise<R>;
    private processResponse;
    private processException;
    private setRateLimiting;
}
export {};
//# sourceMappingURL=api_request.d.ts.map