import { AftershipError } from './error';
export declare enum ErrorType {
    ConstructorError = "ConstructorError",
    HandlerError = "HandlerError",
    InternalError = "InternalError"
}
export declare class ErrorEnum {
    static constructorInvalidApiKey: AftershipError;
    static constructorInvalidOptions: AftershipError;
    static constructorInvalidEndpoint: AftershipError;
    static constructorInvalidProxy: AftershipError;
    static constructorInvalidTrackingNumber: AftershipError;
    static handlerInvalidBody: AftershipError;
    static handlerInvalidQuery: AftershipError;
    static handlerInvalidRaw: AftershipError;
    static handlerInvalidApiKey: AftershipError;
    static handlerInvalidTimeout: AftershipError;
    static handlerInvalidBothTrackingIdAndNumber: AftershipError;
    static handlerInvalidEmptyTrackingIdAndNumber: AftershipError;
    static handlerInvalidEmptySlugOrTrackNumber: AftershipError;
    static handlerInvalidMarkAsCompletedReason: AftershipError;
    static internalError: AftershipError;
}
//# sourceMappingURL=error_enum.d.ts.map