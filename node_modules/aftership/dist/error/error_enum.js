"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorEnum = exports.ErrorType = void 0;
var error_1 = require("./error");
var ErrorType;
(function (ErrorType) {
    ErrorType["ConstructorError"] = "ConstructorError";
    ErrorType["HandlerError"] = "HandlerError";
    ErrorType["InternalError"] = "InternalError";
})(ErrorType = exports.ErrorType || (exports.ErrorType = {}));
var ErrorEnum = /** @class */ (function () {
    function ErrorEnum() {
    }
    ErrorEnum.constructorInvalidApiKey = new error_1.AftershipError(ErrorType.ConstructorError, 'ConstructorError: Invalid API key');
    ErrorEnum.constructorInvalidOptions = new error_1.AftershipError(ErrorType.ConstructorError, 'ConstructorError: Invalid Options value');
    ErrorEnum.constructorInvalidEndpoint = new error_1.AftershipError(ErrorType.ConstructorError, 'ConstructorError: Invalid Endpoint value');
    ErrorEnum.constructorInvalidProxy = new error_1.AftershipError(ErrorType.ConstructorError, 'ConstructorError: Invalid Proxy value');
    ErrorEnum.constructorInvalidTrackingNumber = new error_1.AftershipError(ErrorType.ConstructorError, 'ConstructorError: tracking_number');
    ErrorEnum.handlerInvalidBody = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: Invalid Body value');
    ErrorEnum.handlerInvalidQuery = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: Invalid Query value');
    ErrorEnum.handlerInvalidRaw = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: Invalid Raw value');
    ErrorEnum.handlerInvalidApiKey = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: Invalid API key');
    ErrorEnum.handlerInvalidTimeout = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: Invalid Timeout');
    ErrorEnum.handlerInvalidBothTrackingIdAndNumber = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: Cannot specify id and tracking number at the same time');
    ErrorEnum.handlerInvalidEmptyTrackingIdAndNumber = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: You must specify the id or slug and tracking number');
    ErrorEnum.handlerInvalidEmptySlugOrTrackNumber = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: You must specify both slug and tracking number');
    ErrorEnum.handlerInvalidMarkAsCompletedReason = new error_1.AftershipError(ErrorType.HandlerError, 'HandlerError: Reason must be one of "DELIVERED", "LOST" or "RETURNED_TO_SENDER"');
    // API InternalError
    ErrorEnum.internalError = new error_1.AftershipError(ErrorType.InternalError, "Something went wrong on AfterShip's end.");
    return ErrorEnum;
}());
exports.ErrorEnum = ErrorEnum;
//# sourceMappingURL=error_enum.js.map