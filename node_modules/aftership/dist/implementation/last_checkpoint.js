"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LastCheckpointImplementation = void 0;
var util_1 = require("../lib/util");
var LastCheckpointImplementation = /** @class */ (function () {
    function LastCheckpointImplementation(request) {
        this.request = request;
    }
    /**
     * Return the tracking information of the last checkpoint of a single tracking.
     * @param tracking_param The param to identify the single tracking.
     * Either id or (slug + tracking_number) should be specified.
     * @param fields Optional, List of fields to include in the response. Use comma for multiple values.
     * Fields to include:
     * slug, created_at, checkpoint_time, city, coordinates, country_iso3, country_name, message, state, tag, zip
     * Default: none, Example: city,tag
     * @param lang Optional, Support Chinese to English translation for china-ems and china-post only. (Example: en)
     */
    LastCheckpointImplementation.prototype.getLastCheckpoint = function (tracking_param, fields, lang) {
        try {
            var trackingUrl = util_1.buildTrackingUrl(tracking_param);
            // Add optional params to tracking url
            var optionalParams = [];
            if (util_1.isStringValid(fields)) {
                optionalParams.push("fields=" + fields);
            }
            if (util_1.isStringValid(lang)) {
                optionalParams.push("lang=" + lang);
            }
            if (optionalParams.length > 0) {
                trackingUrl = util_1.combineUrlQuery(trackingUrl, optionalParams.join('&'));
            }
            // make request
            return this.request.makeRequest({
                method: 'GET',
                url: "/last_checkpoint/" + trackingUrl,
            });
        }
        catch (e) {
            return Promise.reject(e);
        }
    };
    return LastCheckpointImplementation;
}());
exports.LastCheckpointImplementation = LastCheckpointImplementation;
//# sourceMappingURL=last_checkpoint.js.map