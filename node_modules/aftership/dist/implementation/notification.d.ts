import { ApiRequest } from '../lib/api_request';
import { NotificationEndpoint } from '../endpoint/notification_endpoint';
import { Notification } from '../model/notification/notification';
import { NotificationRequest } from '../model/notification/notification_request';
import { SingleTrackingParam } from '../model/tracking/single_tracking_param';
export declare class NotificationImplementation implements NotificationEndpoint {
    private readonly request;
    constructor(request: ApiRequest);
    /**
     * Get contact information for the users to notify when the tracking changes.
     * Please note that only customer receivers will be returned.
     * Any email, sms or webhook that belongs to the Store will not be returned.
     * @param tracking_param The param to identify the single tracking.
     * Either id or (slug + tracking_number) should be specified.
     */
    getNotification(tracking_param: SingleTrackingParam): Promise<Notification>;
    /**
     * Add notification receivers to a tracking id (number).
     * @param tracking_param The param to identify the single tracking.
     * Either id or (slug + tracking_number) should be specified.
     * @param notification Notification Request Object
     */
    addNotification(tracking_param: SingleTrackingParam, notification: NotificationRequest): Promise<Notification>;
    /**
     * Remove notification receivers from a tracking id (number).
     * @param tracking_param The param to identify the single tracking.
     * Either id or (slug + tracking_number) should be specified.
     * @param notification Notification Request Object
     */
    removeNotification(tracking_param: SingleTrackingParam, notification: NotificationRequest): Promise<Notification>;
}
//# sourceMappingURL=notification.d.ts.map